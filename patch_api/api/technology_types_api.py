"""
    Patch API V1

    The core API used to integrate with Patch's service  # noqa: E501

    The version of the OpenAPI document: v1
    Contact: engineering@usepatch.com
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401

from patch_api.api_client import ApiClient, Endpoint as _Endpoint
from patch_api.model_utils import (  # noqa: F401
    check_allowed_values,
    check_validations,
    date,
    datetime,
    file_type,
    none_type,
    validate_and_convert_types,
)
from patch_api.model.technology_type_list_response import TechnologyTypeListResponse


class TechnologyTypesApi(object):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client
        self.retrieve_technology_types_endpoint = _Endpoint(
            settings={
                "response_type": (TechnologyTypeListResponse,),
                "auth": ["bearer_auth"],
                "endpoint_path": "/v1/projects/technology_types",
                "operation_id": "retrieve_technology_types",
                "http_method": "GET",
                "servers": None,
            },
            params_map={
                "all": [],
                "required": [],
                "nullable": [],
                "enum": [],
                "validation": [],
            },
            root_map={
                "validations": {},
                "allowed_values": {},
                "openapi_types": {},
                "attribute_map": {},
                "location_map": {},
                "collection_format_map": {},
            },
            headers_map={
                "accept": ["application/json"],
                "content_type": [],
            },
            api_client=api_client,
        )

    def retrieve_technology_types(self, **kwargs):
        """Retrieves the list of technology_types  # noqa: E501

        Retrieves a list of all technology_types.   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.retrieve_technology_types(async_req=True)
        >>> result = thread.get()


        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            TechnologyTypeListResponse
                If the method is called asynchronously, returns the request
                thread.
        """

        args = {}

        args["async_req"] = kwargs.get("async_req", False)
        args["_return_http_data_only"] = kwargs.get("_return_http_data_only", True)
        args["_preload_content"] = kwargs.get("_preload_content", True)
        args["_request_timeout"] = kwargs.get("_request_timeout", None)
        args["_check_input_type"] = kwargs.get("_check_input_type", True)
        args["_check_return_type"] = kwargs.get("_check_return_type", True)
        args["_content_type"] = kwargs.get("_content_type")
        args["_host_index"] = kwargs.get("_host_index")

        return self.retrieve_technology_types_endpoint.call_with_http_info(**args)
